Sub ChamarGoogleGeminiAPI()
    Dim http As Object
    Dim url As String
    Dim apiKey As String
    Dim prompt As String
    Dim jsonResponse As String
    Dim jsonParsed As Object
    Dim respostaTexto As String
    
    ' Certifique-se de que você tem a biblioteca JSON instalada no seu projeto VBA
    ' Defina a URL da API do Google Gemini
    ' Certifique-se de que a URL está correta e corresponde ao endpoint da API que você deseja acessar
    url = "https://generativelanguage.googleapis.com/v1beta/gemini:generateText"
    
    ' Sua chave de API - insira aqui
    ' Certifique-se de que a chave de API está correta e tem as permissões necessárias
    ' para acessar o serviço do Google Gemini.
    ' Nota: A chave de API deve ser mantida em segredo e não deve ser compartilhada publicamente.
    apiKey = "AIzaSyD3kBMb-NDZZa2XNVo7e7z0_8N1VHBJOAs"
    
    ' Prompt a ser enviado
    ' Certifique-se de que o prompt está formatado corretamente para a API
    ' e que atende aos requisitos do modelo de linguagem.
    prompt = "Cumprimente a Câmara Municipal de Santa Bárbara dOeste."
    
    ' Cria objeto XMLHTTP para requisição
    ' Certifique-se de que a biblioteca MSXML2 está disponível no seu ambiente VBA
    ' Isso é necessário para fazer requisições HTTP no VBA.
    Set http = CreateObject("MSXML2.XMLHTTP")
    
    ' Monta o corpo da requisição JSON
    ' Certifique-se de que o corpo JSON está formatado corretamente
    ' e que contém todos os campos necessários para a API.
    Dim jsonBody As String
    jsonBody = "{""prompt"":""" & prompt & """}"
    
    ' Abre a conexão POST
    ' Certifique-se de que a URL está correta e que o método POST é o apropriado
    ' para a operação que você deseja realizar na API do Google Gemini.
    http.Open "POST", url, False
    
    ' Define os headers
    ' Certifique-se de que os headers estão corretos e são necessários para a API
    ' O header Content-Type deve ser "application/json" para enviar dados JSON
    http.setRequestHeader "Content-Type", "application/json"
    http.setRequestHeader "Authorization", "Bearer " & apiKey
    
    ' Envia a requisição
    ' Certifique-se de que o corpo da requisição está formatado corretamente
    ' e que a API está pronta para receber o JSON.
    http.Send jsonBody
    
    ' Verifica se a requisição foi bem sucedida
    ' Certifique-se de que o status HTTP retornado é o esperado
    ' O status 200 indica sucesso, enquanto outros códigos podem indicar erros.
    If http.Status = 200 Then
        jsonResponse = http.responseText
        
        ' Parse do JSON - usando JsonConverter (necessário importar módulo JSON)
        ' https://github.com/VBA-tools/VBA-JSON
        ' Certifique-se de que o módulo JsonConverter está incluído no seu projeto VBA
        ' e que a função ParseJson está disponível para uso.
        Set jsonParsed = JsonConverter.ParseJson(jsonResponse)
        
        ' Supondo que a resposta esteja em jsonParsed("choices")(1)("text")
        ' Ajuste conforme a estrutura da resposta da API
        ' Certifique-se de que a estrutura do JSON retornado corresponde ao que você espera
        ' e que o índice e os campos estão corretos.
        respostaTexto = jsonParsed("choices")(1)("text")
        
        ' Insere a resposta no documento Word
        ' Certifique-se de que o objeto Selection está ativo e pronto para receber texto
        ' A seleção deve estar no local onde você deseja inserir o texto da resposta.
        Selection.TypeText respostaTexto
    Else
        ' Se a requisição falhar, exibe uma mensagem de erro
        ' Certifique-se de que a mensagem de erro é informativa e ajuda a identificar o problema
        ' O status e o statusText fornecem informações sobre o erro ocorrido.
        MsgBox "Erro na requisição: " & http.Status & " - " & http.statusText
    End If
End Sub
